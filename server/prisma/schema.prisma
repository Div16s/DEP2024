// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Role enum defining different user roles
enum Role {
  FACULTY
  HOD
  JAO
  AO
  JR
  JS
  ACCOUNTS
  DEAN
  REGISTRAR
}

enum Department {
  CSE
  EE
  MNC
  ME
  CH
  CE
  BME
  PH
}

// User model representing all types of users
model User {
  id         Int        @id @default(autoincrement())
  name       String
  email      String     @unique
  role       Role       @default(FACULTY)
  department Department @default(CSE)
  signature  String     @default("")
  forms      Form[]
  created_at DateTime   @default(now())
}

// OTP Model
model UserOTP {
  id              Int      @id @default(autoincrement())
  email           String   @unique
  otp             String
  otpCreationTime DateTime @default(now())
}

//forms Model
model Form {
  id                        Int      @id @default(autoincrement())
  name                      String   @default("")
  formCategory              String   @default("SP101")
  status                    Boolean  @default(false)
  budgetHead                String
  sanctionedBudget          String
  approxCost                String
  items                     Item[]
  category                  String
  budgetaryApprovalEnclosed String
  readyForInstallation      String
  goodForResearchPurpose    String
  GEM                       String
  modeOfEnquiry             String
  nameOfSupplier            String
  numberOfQuotation         String
  quotationNumber           String
  modeOfPayment             String
  deliveryPeriod            String
  created_at                DateTime @default(now())

  // Define a field to establish a many-to-one relationship with User
  userId Int
  user   User @relation(fields: [userId], references: [id])
}

//Item model
model Item {
  id              Int    @id @default(autoincrement())
  itemDescription String
  quantity        Int
  price           Float

  // Foreign key referencing Form
  formId Int
  form   Form @relation(fields: [formId], references: [id])
}
